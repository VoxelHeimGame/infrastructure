services:
  auth-service:
    build:
      context: ../../auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`api.localhost`) && PathPrefix(`/auth`)"
      - "traefik.http.services.auth.loadbalancer.server.port=3001"
      - "traefik.http.middlewares.auth-strip-prefix.stripprefix.prefixes=/auth"
      - "traefik.http.routers.auth.middlewares=auth-strip-prefix@docker"
      - "traefik.docker.network=traefik-public"
    networks:
      - traefik-public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - postgres-auth
      - traefik

  # clickhouse:
  #   extends:
  #     file: ./clickhouse/docker-compose.yml
  #     service: clickhouse

  # postgres-game:
  #   extends:
  #     file: ./postgres/docker-compose.yml
  #     service: postgres-game

  postgres-auth:
    extends:
      file: ./postgres/docker-compose.yml
      service: postgres-auth

  # dragonfly:
  #   extends:
  #     file: ./dragonfly/docker-compose.yml
  #     service: dragonfly

  # rabbitmq:
  #   extends:
  #     file: ./rabbitmq/docker-compose.yml
  #     service: rabbitmq

  # minio:
  #   extends:
  #     file: ./minio/docker-compose.yml
  #     service: minio

  traefik:
    extends:
      file: ./traefik/docker-compose.yml
      service: traefik

volumes:
  clickhouse_data:
  postgres_game_data:
  postgres_auth_data:
  dragonfly_data:
  rabbitmq_data:
  minio_data:

networks:
  traefik-public:
    external: true