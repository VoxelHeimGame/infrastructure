services:
  traefik:
    image: traefik:v3.2
    container_name: traefik
    command:
      - "--api.dashboard=${TRAEFIK_API_DASHBOARD}"
      - "--api.insecure=${TRAEFIK_INSECURE}"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:${TRAEFIK_HTTP_PORT}"
      - "--entrypoints.websecure.address=:${TRAEFIK_HTTPS_PORT}"
      - "${TRAEFIK_CERT_RESOLVER}certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "${TRAEFIK_CERT_RESOLVER}certificatesresolvers.myresolver.acme.email=${TRAEFIK_ACME_EMAIL}"
      - "${TRAEFIK_CERT_RESOLVER}certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
      - "${TRAEFIK_HTTPS_PORT}:${TRAEFIK_HTTPS_PORT}"
      - "${TRAEFIK_DASHBOARD_PORT}:${TRAEFIK_DASHBOARD_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS}"

  auth-service:
    build:
      context: ../../auth-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.auth-service.tls.certresolver=myresolver"
      - "traefik.http.services.auth-service.loadbalancer.server.port=${AUTH_SERVICE_PORT}"

  world-service:
    build:
      context: ../../world-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.world-service.rule=PathPrefix(`/world`)"
      - "traefik.http.routers.world-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.world-service.tls.certresolver=myresolver"
      - "traefik.http.services.world-service.loadbalancer.server.port=${WORLD_SERVICE_PORT}"

  player-service:
    build:
      context: ../../player-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.player-service.rule=PathPrefix(`/player`)"
      - "traefik.http.routers.player-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.player-service.tls.certresolver=myresolver"
      - "traefik.http.services.player-service.loadbalancer.server.port=${PLAYER_SERVICE_PORT}"

  combat-service:
    build:
      context: ../../combat-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.combat-service.rule=PathPrefix(`/combat`)"
      - "traefik.http.routers.combat-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.combat-service.tls.certresolver=myresolver"
      - "traefik.http.services.combat-service.loadbalancer.server.port=${COMBAT_SERVICE_PORT}"

  inventory-service:
    build:
      context: ../../inventory-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory-service.rule=PathPrefix(`/inventory`)"
      - "traefik.http.routers.inventory-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.inventory-service.tls.certresolver=myresolver"
      - "traefik.http.services.inventory-service.loadbalancer.server.port=${INVENTORY_SERVICE_PORT}"

  chat-service:
    build:
      context: ../../chat-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat-service.rule=PathPrefix(`/chat`)"
      - "traefik.http.routers.chat-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.chat-service.tls.certresolver=myresolver"
      - "traefik.http.services.chat-service.loadbalancer.server.port=${CHAT_SERVICE_PORT}"

  analytics-service:
    build:
      context: ../../analytics-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.analytics-service.rule=PathPrefix(`/analytics`)"
      - "traefik.http.routers.analytics-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.analytics-service.tls.certresolver=myresolver"
      - "traefik.http.services.analytics-service.loadbalancer.server.port=${ANALYTICS_SERVICE_PORT}"

  assets-service:
    build:
      context: ../../assets-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.assets-service.rule=PathPrefix(`/assets`)"
      - "traefik.http.routers.assets-service.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "${TRAEFIK_TLS_CONFIG}traefik.http.routers.assets-service.tls.certresolver=myresolver"
      - "traefik.http.services.assets-service.loadbalancer.server.port=${ASSETS_SERVICE_PORT}"

networks:
  default:
    name: voxelheim-network